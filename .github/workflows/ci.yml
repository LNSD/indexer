name: ci
on:
  pull_request:
  merge_group:
  push:
    branches:
      - "main"
      - "renovate/lock-file-maintenance"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        - uses: dtolnay/rust-toolchain@nightly
          with:
            components: rustfmt
        - run: cargo +nightly fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Cache cargo build files
        uses: Leafwing-Studios/cargo-cache@c7e8aa40ae2c975774d3bd766beb92927cfd7771 # v1

      - run: cargo clippy --all-features --all-targets -- -Dwarnings --force-warn deprecated --force-warn dead-code

  # Prepared query metadata is up-to-date
  sqlx:
    runs-on: ubuntu-latest
    needs: [ "fmt", "clippy" ]
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres@localhost:5432
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy, llvm-tools-preview
      - name: Cache cargo build files
        uses: Leafwing-Studios/cargo-cache@c7e8aa40ae2c975774d3bd766beb92927cfd7771 # v1

      - name: Install sqlx-cli
        uses: baptiste0928/cargo-install@904927dbe77864e0f2281519fe9d5bd097a220b3 # v3
        with:
          crate: sqlx-cli
          args: --no-default-features
          features: postgres
      - name: Run migrations
        run: cargo sqlx migrate run

      - name: Check that the sqlx prepared query metadata is up-to-date
        run: cargo sqlx prepare --workspace --check -- --all-targets --all-features


  test:
    runs-on: ubuntu-latest
    needs: [ "fmt", "clippy" ]
    permissions:
      contents: write
      pull-requests: write
      actions: read
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres@localhost:5432
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Cache cargo build files
        uses: Leafwing-Studios/cargo-cache@c7e8aa40ae2c975774d3bd766beb92927cfd7771 # v1

      - name: Install cargo-llvm-cov
        uses: baptiste0928/cargo-install@904927dbe77864e0f2281519fe9d5bd097a220b3 # v3
        with:
          crate: cargo-llvm-cov

      - name: Install sqlx-cli
        uses: baptiste0928/cargo-install@904927dbe77864e0f2281519fe9d5bd097a220b3 # v3
        with:
          crate: sqlx-cli
          args: --no-default-features
          features: postgres
      - name: Run migrations
        run: cargo sqlx migrate run

      - name: Run tests and generate coverage report
        run: cargo llvm-cov test --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@643bc377ffa44ace6394b2b5d0d3950076de9f63 # v2.3.0
        with:
          file: ./lcov.info
